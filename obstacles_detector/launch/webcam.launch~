<launch>
	<!-- launch video stream -->
   	<include file="$(find video_stream_opencv)/launch/camera.launch" >
   		<!-- node name and ros graph name -->
	  	<arg name="camera_name" value="webcam" />
	  	<!-- means video device 0, /dev/video0 -->
	  	<arg name="video_stream_provider" value="0" />
	  	<!-- throttling the querying of frames to -->
	  	<arg name="fps" value="30" />
	  	<!-- setting frame_id -->
	  	<arg name="frame_id" value="webcam_optical_frame" />
	  	<!-- camera info loading, take care as it needs the "file:///" at the start , e.g.:
	  	"file:///$(find your_camera_package)/config/your_camera.yaml" -->
	  	<arg name="camera_info_url" value="" />
	  	<!-- flip the image horizontally (mirror it) -->
	  	<arg name="flip_horizontal" value="false" />
	  	<!-- flip the image vertically -->
	  	<arg name="flip_vertical" value="false" />
		<!-- force width and height, 0 means no forcing -->
	    <!-- 
	    <arg name="width" value="0"/>
	    <arg name="height" value="0"/>
		-->
	  	<!-- visualize on an image_view window the stream generated -->
	  	<arg name="visualize" value="true" />
   	</include>



	<node pkg="obstacles_detector" type="blobs_detector_node" name="blobs_detector_node" output="screen">
		
		<remap from="input_image" to="/webcam/image_raw"/>
		<remap from="output_image" to="/detector/image_raw"/>
		
		<param name="iLowH" value="0"/>
		<param name="iHighH" value="200"/>
		<param name="iLowS" value="150"/>
		<param name="iHighS" value="255"/>
		<param name="iLowV" value="150"/>
		<param name="iHighV" value="200"/>
		
	</node>
</launch>
